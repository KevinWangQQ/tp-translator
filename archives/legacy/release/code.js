(()=>{console.log("Optimized Production Plugin loading...");class e{async translateText(e,t,a,n,s){console.log(`Translating with ${n}:`,{text:e,sourceLang:t,targetLang:a});try{if("openai"===n)return await this.translateWithOpenAI(e,t,a,s);if("gemini"===n)return await this.translateWithGemini(e,t,a,s);throw new Error(`Unsupported engine: ${n}`)}catch(e){throw console.error("Translation error:",e),e}}async translateWithOpenAI(e,t,a,n){const s=this.buildOptimizedPrompt(e,t,a),i=await fetch("https://api.openai.com/v1/completions",{method:"POST",headers:{Authorization:`Bearer ${n.apiKey}`,"Content-Type":"application/json"},body:JSON.stringify({model:n.model||"gpt-3.5-turbo-instruct",prompt:s,max_tokens:500,temperature:.1,stop:["\\n\\n","Original:","Translation:"]})});if(!i.ok){const e=await i.json();throw new Error(`OpenAI API error: ${e.error&&e.error.message||i.statusText}`)}const r=await i.json(),o=r.choices&&r.choices[0]&&r.choices[0].text&&r.choices[0].text.trim();if(!o)throw new Error("No translation returned from OpenAI");return o}async translateWithGemini(e,t,a,n){const s=this.buildOptimizedPrompt(e,t,a),i=await fetch(`https://generativelanguage.googleapis.com/v1beta/models/${n.model}:generateContent?key=${n.apiKey}`,{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({contents:[{parts:[{text:s}]}],generationConfig:{temperature:.1,maxOutputTokens:500}})});if(!i.ok){const e=await i.json();throw new Error(`Gemini API error: ${e.error&&e.error.message||i.statusText}`)}const r=await i.json(),o=r.candidates&&r.candidates[0]&&r.candidates[0].content&&r.candidates[0].content.parts&&r.candidates[0].content.parts[0]&&r.candidates[0].content.parts[0].text&&r.candidates[0].content.parts[0].text.trim();if(!o)throw new Error("No translation returned from Gemini");return o}buildOptimizedPrompt(e,t,a){const n={auto:"auto-detected language",en:"English","zh-CN":"Simplified Chinese","zh-TW":"Traditional Chinese",ja:"Japanese",ko:"Korean",fr:"French",de:"German",es:"Spanish"};return`Translate this Figma UI element from ${n[t]||t} to ${n[a]||a}.\n\nCRITICAL RULES:\n- This is UI/interface text - preserve ALL formatting exactly\n- Keep currency symbols unchanged (¥ stays ¥, $ stays $, € stays €)\n- Keep numbers, prices, codes, and measurements exactly as-is\n- Preserve punctuation, spacing, and special characters\n- Use standard UI terminology for the target language\n- Output ONLY the translated text, nothing else\n\nText: "${e}"`}async testConnection(e,t){try{return await this.translateText("Hello","en","zh-CN",e,t),!0}catch(e){return console.error("Connection test failed:",e),!1}}}class t{getSelectedTextNodes(){return figma.currentPage.selection.filter(e=>"TEXT"===e.type)}getSelectionInfo(){const e=figma.currentPage.selection,t=this.getSelectedTextNodes();return{totalNodes:e.length,textNodes:t.length,nodeIds:t.map(e=>e.id),textContents:t.map(e=>e.characters||"")}}async applyTranslation(e,t,a){let n;try{n=figma.getNodeById(e)}catch(t){n=figma.currentPage.findOne(t=>t.id===e)}if(!n||"TEXT"!==n.type)throw new Error("Node not found or not a text node");switch(await figma.loadFontAsync(n.fontName),a){case"replace":n.characters=t;break;case"beside":await this.createBesideText(n,t);break;case"newFrame":await this.createFrameWithTranslation(n,t);break;case"newPage":await this.createPageWithTranslation(n,t);break;default:throw new Error(`Unsupported mode: ${a}`)}}async createBesideText(e,t){const a=e.clone();a.characters=t,a.x=e.x+e.width+20;const n=e.fills.slice();n.length>0&&"SOLID"===n[0].type&&(n[0]=Object.assign({},n[0],{color:{r:0,g:.5,b:0}}),a.fills=n)}async createFrameWithTranslation(e,t){const a=figma.createFrame();a.name="Translation Frame",a.x=e.x+e.width+50,a.y=e.y;const n=e.clone();n.x=0,n.y=0,a.appendChild(n);const s=e.clone();s.characters=t,s.x=0,s.y=n.height+10,a.appendChild(s),a.resize(Math.max(n.width,s.width)+20,n.height+s.height+30),a.backgrounds=[{type:"SOLID",color:{r:.95,g:.95,b:.95}}]}async createPageWithTranslation(e,t){const a=figma.createPage();a.name=`Translation - ${(new Date).toLocaleString()}`;const n=e.clone();n.x=100,n.y=100,a.appendChild(n);const s=e.clone();s.characters=t,s.x=100,s.y=n.y+n.height+50,a.appendChild(s)}getAvailableFonts(){return["Inter","Roboto","Arial","Helvetica"]}}class a{constructor(){this.isTranslating=!1,this.translationEngine=new e,this.figmaService=new t}async handleMessage(e){console.log("Handling message:",e.type);try{switch(e.type){case"get-selection":return{type:"selection-info",payload:this.figmaService.getSelectionInfo()};case"select-all-text":return await this.handleSelectAllText();case"start-translation":return await this.handleOptimizedTranslation(e.payload);case"cancel-translation":return this.isTranslating=!1,{type:"translation-cancelled"};case"apply-translation":return await this.handleApplyTranslation(e.payload);case"test-engine":return await this.handleTestEngine(e.payload);case"save-settings":return await this.handleSaveSettings(e.payload);case"load-settings":return await this.handleLoadSettings();default:return console.log("Unknown message type:",e.type),null}}catch(e){return console.error("Message handling error:",e),{type:"error",payload:{error:e.message}}}}async handleOptimizedTranslation(e){if(this.isTranslating)throw new Error("Translation already in progress");this.isTranslating=!0;const{engine:t,sourceLang:a,targetLang:n,mode:s,nodeIds:i,config:r}=e,o=[];let l=0,c=0;try{const e=r,g=3,d=[];for(let e=0;e<i.length;e+=g)d.push(i.slice(e,e+g));let p=0;for(const r of d){if(!this.isTranslating)break;const g=r.map(async i=>await this.translateSingleNode(i,t,a,n,s,e)),d=await Promise.all(g);for(const e of d)o.push(e),"success"===e.status?l++:c++,this.postMessage({type:"translation-result",payload:e});p+=r.length,this.postMessage({type:"translation-progress",payload:{progress:p/i.length*100}}),p<i.length&&await new Promise(e=>setTimeout(e,300))}return this.isTranslating=!1,{type:"translation-complete",payload:{results:o,successCount:l,failureCount:c}}}catch(e){throw this.isTranslating=!1,e}}async translateSingleNode(e,t,a,n,s,i){let r;try{r=figma.getNodeById(e)}catch(t){r=figma.currentPage.findOne(t=>t.id===e)}if(!r||"TEXT"!==r.type)return{nodeId:e,originalText:"",translatedText:"",status:"error",error:"Node not found or not a text node",applied:!1};const o=r.characters||"";try{const r=await this.translationEngine.translateText(o,a,n,t,i),l={nodeId:e,originalText:o,translatedText:r,status:"success",applied:!1};try{await this.figmaService.applyTranslation(e,r,s),l.applied=!0}catch(e){console.warn("Failed to auto-apply translation:",e),l.applied=!1}return l}catch(t){return{nodeId:e,originalText:o,translatedText:"",status:"error",error:t.message,applied:!1}}}async handleSelectAllText(){try{const e=figma.currentPage.findAll(e=>"TEXT"===e.type);return figma.currentPage.selection=e,{type:"selection-info",payload:{totalNodes:e.length,textNodes:e.length,nodeIds:e.map(e=>e.id),textContents:e.map(e=>e.characters||"")}}}catch(e){return{type:"error",payload:{error:e.message}}}}async handleApplyTranslation(e){try{return await this.figmaService.applyTranslation(e.nodeId,e.translatedText,e.mode),{type:"apply-result",payload:{success:!0}}}catch(e){return{type:"apply-result",payload:{success:!1,error:e.message}}}}async handleTestEngine(e){try{const t=await this.translationEngine.testConnection(e.engine,e.config);return{type:"engine-test-result",payload:{engine:e.engine,success:t,error:t?null:"Connection test failed"}}}catch(t){return{type:"engine-test-result",payload:{engine:e.engine,success:!1,error:t.message}}}}async handleSaveSettings(e){try{return e.engines&&await figma.clientStorage.setAsync("translationEngines",e.engines),e.settings&&await figma.clientStorage.setAsync("pluginSettings",e.settings),e.translationMemories&&await figma.clientStorage.setAsync("translationMemories",e.translationMemories),console.log("Settings saved successfully"),{type:"settings-save-result",payload:{success:!0}}}catch(e){return console.error("Failed to save settings:",e),{type:"settings-save-result",payload:{success:!1,error:e.message}}}}async handleLoadSettings(){try{const e=await figma.clientStorage.getAsync("translationEngines")||{openai:{enabled:!1,apiKey:"",model:"gpt-3.5-turbo-instruct"},gemini:{enabled:!1,apiKey:"",model:"gemini-pro"}},t=await figma.clientStorage.getAsync("pluginSettings")||{defaultTargetLang:"zh-CN"},a=await figma.clientStorage.getAsync("translationMemories")||[];return console.log("Settings loaded successfully"),{type:"settings-loaded",payload:{engines:e,settings:t,translationMemories:a}}}catch(e){return console.error("Failed to load settings:",e),{type:"settings-load-error",payload:{error:e.message}}}}postMessage(e){figma.ui.postMessage(e)}}class n{constructor(){this.messageHandler=new a,this.figmaService=new t}async initialize(){console.log("Initializing optimized plugin..."),this.setupUI(),this.setupMessageHandling(),this.setupEventListeners(),this.postMessage({type:"plugin-ready",payload:{version:"1.1.0",selection:this.figmaService.getSelectionInfo()}}),console.log("Optimized plugin initialized successfully")}setupUI(){figma.showUI(__html__,{width:380,height:600,title:"Cube Translator"})}setupMessageHandling(){figma.ui.onmessage=async e=>{try{console.log("Received message:",e.type);const t=await this.messageHandler.handleMessage(e);t&&this.postMessage(t)}catch(e){console.error("Message handling error:",e),this.postMessage({type:"error",payload:{error:e.message}})}}}setupEventListeners(){figma.on("selectionchange",()=>{const e=this.figmaService.getSelectionInfo();this.postMessage({type:"selection-changed",payload:e})}),figma.on("currentpagechange",()=>{this.postMessage({type:"page-changed",payload:{pageId:figma.currentPage.id,pageName:figma.currentPage.name}})}),figma.on("close",()=>{console.log("Plugin closing...")})}postMessage(e){figma.ui.postMessage(e),console.log("Sent message:",e.type)}}const s=(e,t)=>{console.error(`Error in ${t}:`,e),figma.ui&&figma.ui.postMessage({type:"error",payload:{error:e.message,context:t}})};async function i(){try{const e=new n;await e.initialize()}catch(e){s(e,"main initialization")}}const r={"open-translator":async()=>{await i()},"quick-translate":async()=>{await i(),setTimeout(()=>{figma.ui.postMessage({type:"auto-translate",payload:{engine:"openai",sourceLang:"auto",targetLang:"zh-CN"}})},1e3)},"open-settings":async()=>{await i(),setTimeout(()=>{figma.ui.postMessage({type:"show-settings"})},500)}};figma.command&&r[figma.command]?r[figma.command]().catch(e=>{s(e,`command: ${figma.command}`)}):i().catch(e=>{s(e,"default startup")}),console.log("Optimized production plugin script loaded")})();
//# sourceMappingURL=code.js.map